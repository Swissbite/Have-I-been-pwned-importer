/*
 * This file is generated by jOOQ.
 */
package net.daester.david.haveIBeenPwnedImporter.jooq.tables.pojos


import java.io.Serializable
import java.time.LocalDateTime


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Hash(
    var hashPrefix: String? = null,
    var hashSuffix: String? = null,
    var occurrence: Int? = null,
    var fileHash: String? = null,
    var lastUpdate: LocalDateTime? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Hash = other as Hash
        if (this.hashPrefix == null) {
            if (o.hashPrefix != null)
                return false
        }
        else if (this.hashPrefix != o.hashPrefix)
            return false
        if (this.hashSuffix == null) {
            if (o.hashSuffix != null)
                return false
        }
        else if (this.hashSuffix != o.hashSuffix)
            return false
        if (this.occurrence == null) {
            if (o.occurrence != null)
                return false
        }
        else if (this.occurrence != o.occurrence)
            return false
        if (this.fileHash == null) {
            if (o.fileHash != null)
                return false
        }
        else if (this.fileHash != o.fileHash)
            return false
        if (this.lastUpdate == null) {
            if (o.lastUpdate != null)
                return false
        }
        else if (this.lastUpdate != o.lastUpdate)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.hashPrefix == null) 0 else this.hashPrefix.hashCode())
        result = prime * result + (if (this.hashSuffix == null) 0 else this.hashSuffix.hashCode())
        result = prime * result + (if (this.occurrence == null) 0 else this.occurrence.hashCode())
        result = prime * result + (if (this.fileHash == null) 0 else this.fileHash.hashCode())
        result = prime * result + (if (this.lastUpdate == null) 0 else this.lastUpdate.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Hash (")

        sb.append(hashPrefix)
        sb.append(", ").append(hashSuffix)
        sb.append(", ").append(occurrence)
        sb.append(", ").append(fileHash)
        sb.append(", ").append(lastUpdate)

        sb.append(")")
        return sb.toString()
    }
}
